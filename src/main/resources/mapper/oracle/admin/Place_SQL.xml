<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Place">
	
	<!-- 장소관리 리스트 -->
	<sql id="PM_getDataListBody">
		FROM (
			SELECT	AB.*
					, ROW_NUMBER() OVER (
		    		<choose>
				 		<when test="orderBy == 1">
				 		ORDER BY	COUNT ${sortDirect}
				 		</when>
				 		<when test="orderBy == 2">
				 		ORDER BY	PM_NAME ${sortDirect}
				 		</when>
				 		<when test="orderBy == 3"> 
				 		ORDER BY	PM_NAME_EN ${sortDirect}
				 		</when>
				 		<when test="orderBy == 4"> 
				 		ORDER BY	PM_SEAT ${sortDirect}
				 		</when>
				 		<when test="orderBy == 5"> 날짜/시간
				 		ORDER BY	PM_USE ${sortDirect}
				 		</when>
				 		<when test="orderBy == 6"> 
				 		ORDER BY	PM_SEATPLAN_YN ${sortDirect}
				 		</when>
				 		<otherwise>
				 		ORDER BY 	COUNT DESC
				 		</otherwise>
				 	</choose>
			 		) RNUM
			FROM (
				SELECT 	ROWNUM AS COUNT
						, AA.*
				FROM (
					SELECT 		TO_NUMBER(SUBSTR(PM_KEYNO,-10)) PM_KEYNO
								, P.PM_NAME
								, P.PM_NAME_EN
								, P.PM_SEAT
								, CASE PM_USE
									WHEN 'Y' THEN 'O'
									WHEN 'N' THEN 'X'
								END PM_USE
								, CASE PM_SEATPLAN_YN
									WHEN 'Y' THEN 'O'
									WHEN 'N' THEN 'X'
								END PM_SEATPLAN_YN
								, FS.*
					FROM 		T_PLACE_MANAGER P
					LEFT JOIN	T_COMMON_FILE_SUB FS
					ON			P.PM_FS_KEYNO = FS.FS_KEYNO
					WHERE		PM_USE		!=	'D'
					ORDER BY	PM_KEYNO
				) AA
				
			) AB
		WHERE 1=1
		<if test="searchList != null">
		 	<foreach collection="searchList" item="item">
		 		<choose>
		 			<when test='item.searchIndex.equals("1")'>
	 		AND		COUNT   LIKE '%' || #{item.searchKeyword} || '%'			
		 			</when>
		 			<when test='item.searchIndex.equals("2")'>
	 		AND		PM_NAME  LIKE '%' || #{item.searchKeyword} || '%'				
		 			</when>
		 			<when test='item.searchIndex.equals("3")'>
	 		AND		PM_NAME_EN  LIKE '%' || #{item.searchKeyword} || '%'					
		 			</when>
		 			<when test='item.searchIndex.equals("4")'>
	 		AND		PM_SEAT 	LIKE '%' || #{item.searchKeyword} || '%'						
		 			</when>
		 			<when test='item.searchIndex.equals("5")'>
	 		AND		PM_USE  	 = #{item.searchKeyword}								
		 			</when>
		 			<when test='item.searchIndex.equals("6")'>
	 		AND		PM_SEATPLAN_YN   = #{item.searchKeyword}	 
		 			</when>
		 			<when test='item.searchIndex.equals("all")'>
	 		AND (
	 				COUNT   		LIKE '%' || #{item.searchKeyword} || '%'		OR
	 				PM_NAME 		LIKE '%' || #{item.searchKeyword} || '%'		OR
	 				PM_NAME_EN  	LIKE '%' || #{item.searchKeyword} || '%'		OR
	 				PM_SEAT 		LIKE '%' || #{item.searchKeyword} || '%'		OR
	 				PM_USE  		 = #{item.searchKeyword}						OR
	 				PM_SEATPLAN_YN   = #{item.searchKeyword}
	 		)							
		 			</when>
		 		</choose>
		 	</foreach>
	 	</if>
		)AA
	</sql>
	
	<!-- 프로그램신청관리 - 장소관리 카운트 -->
	<select	id="PM_getDataListCnt" resultType="int">
		SELECT COUNT(*) 
		<include refid="PM_getDataListBody"/>
	</select>
	
	<!-- 프로그램신청관리 - 장소관리 리스트  -->
	<select	id="PM_getDataList" resultType="hashmap">
		SELECT	* 
		<include  refid="PM_getDataListBody"/>
		<if test="recordCountPerPage != 0">
		WHERE 1=1
		AND 	RNUM BETWEEN  #{firstIndex} AND #{lastIndex} 
		</if>
	</select>
	
	<select id="PM_getList" resultType="hashmap">
		SELECT ROWNUM AS "NUMBER", AA.*
		FROM (
			SELECT 		P.* ,FS.*
			FROM 		T_PLACE_MANAGER P
			LEFT JOIN	T_COMMON_FILE_SUB FS
			ON			P.PM_FS_KEYNO = FS.FS_KEYNO
			WHERE		PM_USE		!=	'D'
			ORDER BY	PM_KEYNO DESC
		) AA
		<if test="PM_KEYNO != null and PM_KEYNO != ''">
		WHERE		AA.PM_KEYNO	=	#{PM_KEYNO}
		</if>
		ORDER BY	AA.PM_KEYNO DESC
	</select>
	
	<insert id="PM_insertData" parameterType="PlaceDTO">
		INSERT INTO T_PLACE_MANAGER(
				PM_KEYNO
			,	PM_NAME
			,   PM_NAME_EN
			,	PM_FS_KEYNO
			,	PM_USE
			,	PM_SEAT
			,	PM_SEATPLAN_YN
			,	PM_SEATPLAN_WIDTH
			,	PM_SEATPLAN_HEIGHT
		) VALUES (
				#{PM_KEYNO}
			,	#{PM_NAME}
			,	#{PM_NAME_EN}
			,	#{PM_FS_KEYNO}
			,	#{PM_USE}
			,	#{PM_SEAT}
			,	#{PM_SEATPLAN_YN}
			,	#{PM_SEATPLAN_WIDTH}
			,	#{PM_SEATPLAN_HEIGHT}
		)
	</insert>
	
	<update id="PM_updateData" parameterType="PlaceDTO">
		UPDATE 	T_PLACE_MANAGER
		SET		PM_NAME				=	#{PM_NAME}
			  , PM_NAME_EN			=	#{PM_NAME_EN}
			  , PM_FS_KEYNO			=	#{PM_FS_KEYNO}
			  , PM_USE				=	#{PM_USE}
			  , PM_SEAT				=	#{PM_SEAT}
			  , PM_SEATPLAN_YN		=	#{PM_SEATPLAN_YN}
			  , PM_SEATPLAN_WIDTH	=	#{PM_SEATPLAN_WIDTH}
			  , PM_SEATPLAN_HEIGHT	=	#{PM_SEATPLAN_HEIGHT}
		WHERE	PM_KEYNO			=	#{PM_KEYNO}
	
	</update>
	
	<select id="PM_getList2" resultType="hashmap">
		SELECT  ROWNUM AS "NUMBER", AA.*
		FROM (
			SELECT 		P.*
						, FS.*
			FROM 		T_PLACE_MANAGER P
			LEFT JOIN	T_COMMON_FILE_SUB FS
			ON			P.PM_FS_KEYNO = FS.FS_KEYNO
			WHERE		PM_USE		=	'Y'
			ORDER BY	PM_KEYNO DESC
		) AA
		ORDER BY	PM_KEYNO DESC
	</select>
	
	<update id="PM_deleteData" parameterType="PlaceDTO">
		UPDATE 	T_PLACE_MANAGER
		SET		PM_USE		=	'D'
		WHERE	PM_KEYNO	=	#{PM_KEYNO}
	
	</update>
	
	
	<insert id="PSM_insertData" parameterType="hashmap">
		INSERT ALL
		<foreach collection="seatMainList" item="item"> 
		INTO T_PLACE_SEATGROUP_MAIN(
			  PSM_KEYNO
			, PSM_PM_KEYNO
			, PSM_NAME
			, PSM_ROW
			, PSM_COL
			, PSM_TOP
			, PSM_LEFT
		) 
		VALUES
		(
				#{item.PSM_KEYNO}
			,	#{item.PSM_PM_KEYNO}
			,	#{item.PSM_NAME}
			,	#{item.PSM_ROW}
			,	#{item.PSM_COL}
			,	#{item.PSM_TOP}
			,	#{item.PSM_LEFT}
		)
		</foreach>
		SELECT * FROM dual
	</insert>
	
	<insert id="PSS_insertData" parameterType="hashmap">
		INSERT ALL
		<foreach collection="seatSubList" item="item">  
		INTO T_PLACE_SEATGROUP_SUB(
			  PSS_KEYNO
			, PSS_PSM_KEYNO
			, PSS_ROW
			, PSS_COL
			, PSS_CODE
		) 
		VALUES
		(
				#{item.PSS_KEYNO}
			,	#{item.PSS_PSM_KEYNO}
			,	#{item.PSS_ROW}
			,	#{item.PSS_COL}
			,	#{item.PSS_CODE}
		)
		</foreach>
		SELECT * FROM dual
	</insert>
	
	<select id="PSM_getList" resultType="hashmap">
		WITH V_TEMP1 AS(
		    SELECT B.* FROM(
		    SELECT	A.*
		           ,ROW_NUMBER() OVER(PARTITION BY A.PSM_KEYNO, A.PSS_ROW ORDER BY A.PSM_KEYNO, A.PSS_ROW) AS RN
		    FROM (
		        SELECT		*
		        FROM		T_PLACE_SEATGROUP_MAIN M
		        LEFT JOIN	T_PLACE_SEATGROUP_SUB S
		        ON			M.PSM_KEYNO = S.PSS_PSM_KEYNO
		        WHERE		PSM_PM_KEYNO	=	#{PM_KEYNO}
		        ORDER BY PSM_KEYNO, PSS_ROW, PSS_COL 
		        ) A
		    ) B
		    WHERE B.RN = 1  
		)        
		,V_TEMP2 AS(
					SELECT	PSM_KEYNO, LISTAGG(PSS_CODE,',')  WITHIN GROUP (ORDER BY PSS_COL ASC) CODES, PSS_ROW
				    FROM (
				        SELECT		*
				        FROM		T_PLACE_SEATGROUP_MAIN M
				        LEFT JOIN	T_PLACE_SEATGROUP_SUB S
				        ON			M.PSM_KEYNO = S.PSS_PSM_KEYNO
				        WHERE		PSM_PM_KEYNO	=	#{PM_KEYNO}
				        ORDER BY PSM_KEYNO,PSS_ROW,PSS_COL
				    ) A
				    GROUP BY PSM_KEYNO, PSS_ROW
		) 
		
		,V_TEMP3 AS(
		SELECT BB.* FROM(
		    SELECT AA.*, ROW_NUMBER() OVER(PARTITION BY AA.PSM_KEYNO ORDER BY AA.PSM_KEYNO) AS RN3
		    FROM(
		            SELECT   A.*, B.CODES
		            FROM V_TEMP1 A
		            INNER JOIN V_TEMP2 B
		            ON A.PSM_KEYNO = B.PSM_KEYNO
		            AND A.PSS_ROW = B.PSS_ROW
		        ) AA 
		    )BB
		    WHERE BB.RN3 = 1  
		)
		
		,V_TEMP4 AS(
		    SELECT AA.PSM_KEYNO, LISTAGG(CODES,'|')  WITHIN GROUP (ORDER BY PSS_ROW ASC) DATA
		    FROM(
		        SELECT   A.*, B.CODES
		        FROM V_TEMP1 A
		        INNER JOIN V_TEMP2 B
		        ON A.PSM_KEYNO = B.PSM_KEYNO
		        AND A.PSS_ROW = B.PSS_ROW
		    ) AA 
		    GROUP BY PSM_KEYNO
		)
		
		SELECT V3.*, V4.DATA
		FROM V_TEMP3 V3
		INNER JOIN V_TEMP4 V4
		ON V3.PSM_KEYNO = V4.PSM_KEYNO
	</select>
	
	<delete id="PSM_deleteData" parameterType="String">
		DELETE FROM T_PLACE_SEATGROUP_MAIN
		WHERE	PSM_PM_KEYNO	=	#{PM_KEYNO}	
	</delete>
	
	<delete id="PSS_deleteData" parameterType="String">
		DELETE FROM T_PLACE_SEATGROUP_SUB
		WHERE	PSS_PSM_KEYNO	IN (
			SELECT 	PSM_KEYNO
			FROM	T_PLACE_SEATGROUP_MAIN
			WHERE	PSM_PM_KEYNO	=	#{PM_KEYNO}	
		)	
	</delete>
	
</mapper>
 